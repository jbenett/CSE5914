// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ForwardRef>
        ðŸ¤‘Â Support The BoysÂ ðŸ¤‘
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "ðŸ¤‘Â Support The BoysÂ ðŸ¤‘",
      },
      "ref": null,
      "rendered": "ðŸ¤‘Â Support The BoysÂ ðŸ¤‘",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
    padding: 0.5rem 0.75rem;
    background-color: white;
    border-radius: 3px;
    font-family: ",
            [Function],
            ";
    font-weight: bold;
    position: absolute;
    bottom: 15px;
    left: 15px;
    transition: 150ms all;
    ",
            [Function],
            "

    &:hover {
        cursor: pointer;
        color: white;
        background-color: ",
            [Function],
            ";
        ",
            [Function],
            "
    }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ForwardRef>
          ðŸ¤‘Â Support The BoysÂ ðŸ¤‘
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "ðŸ¤‘Â Support The BoysÂ ðŸ¤‘",
        },
        "ref": null,
        "rendered": "ðŸ¤‘Â Support The BoysÂ ðŸ¤‘",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "rules": Array [
              "
    padding: 0.5rem 0.75rem;
    background-color: white;
    border-radius: 3px;
    font-family: ",
              [Function],
              ";
    font-weight: bold;
    position: absolute;
    bottom: 15px;
    left: 15px;
    transition: 150ms all;
    ",
              [Function],
              "

    &:hover {
        cursor: pointer;
        color: white;
        background-color: ",
              [Function],
              ";
        ",
              [Function],
              "
    }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
